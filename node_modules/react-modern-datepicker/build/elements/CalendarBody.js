'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _DateView = require('./DateView');

var _DateView2 = _interopRequireDefault(_DateView);

var _MonthView = require('./MonthView');

var _MonthView2 = _interopRequireDefault(_MonthView);

var _YearView = require('./YearView');

var _YearView2 = _interopRequireDefault(_YearView);

var _Wrapper = require('./Wrapper');

var _Wrapper2 = _interopRequireDefault(_Wrapper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CalendarBody = function CalendarBody(props) {
  var viewFor = props.viewFor,
      date = props.date,
      format = props.format,
      onChange = props.onChange,
      yearBlock = props.yearBlock,
      maxDate = props.maxDate,
      minDate = props.minDate;

  return _react2.default.createElement(
    _Wrapper2.default,
    null,
    viewFor === 'date' && _react2.default.createElement(_DateView2.default, {
      date: date,
      format: format,
      maxDate: maxDate,
      minDate: minDate,
      onDateChange: function onDateChange(value) {
        return onChange(value, 'date');
      }
    }),
    viewFor === 'month' && _react2.default.createElement(_MonthView2.default, {
      date: date,
      format: format,
      maxDate: maxDate,
      minDate: minDate,
      onMonthChange: function onMonthChange(value) {
        return onChange(value, 'month');
      }
    }),
    viewFor === 'year' && _react2.default.createElement(_YearView2.default, {
      date: date,
      format: format,
      maxDate: maxDate,
      minDate: minDate,
      onYearChange: function onYearChange(value) {
        return onChange(value, 'year');
      },
      yearBlock: yearBlock
    })
  );
};

CalendarBody.propTypes = {
  date: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
  format: _propTypes2.default.string,
  maxDate: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
  minDate: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
  onChange: _propTypes2.default.func,
  viewFor: _propTypes2.default.string,
  yearBlock: _propTypes2.default.number
};

exports.default = CalendarBody;